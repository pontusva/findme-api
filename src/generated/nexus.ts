/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { Context } from "./../context"
import type { core } from "nexus"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    /**
     * The `Upload` scalar type represents a file upload.
     */
    Upload<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "Upload";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    /**
     * The `Upload` scalar type represents a file upload.
     */
    Upload<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "Upload";
  }
}


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  Upload: any
}

export interface NexusGenObjects {
  AuthResponse: { // root type
    token: string; // String!
    userId: string; // String!
  }
  FoundPet: { // root type
    description?: string | null; // String
    finderId: string; // String!
    id: string; // String!
    locationId?: string | null; // String
    photoUrl?: string | null; // String
    status: string; // String!
  }
  Location: { // root type
    address?: string | null; // String
    foundPetId?: string | null; // String
    id: string; // String!
    latitude: number; // Float!
    longitude: number; // Float!
    lostReportId?: string | null; // String
  }
  Logout: { // root type
    logout: boolean; // Boolean!
  }
  LostPetReport: { // root type
    description?: string | null; // String
    id: string; // String!
    locationId?: string | null; // String
    petId: string; // String!
    reportedBy: string; // String!
    status: string; // String!
  }
  Microchip: { // root type
    chipNumber: string; // String!
    id: string; // String!
    petId: string; // String!
  }
  Mutation: {};
  Notification: { // root type
    id: string; // String!
    message: string; // String!
    read: boolean; // Boolean!
    senderId?: string | null; // String
    userId: string; // String!
  }
  Pet: { // root type
    age?: number | null; // Int
    breed?: string | null; // String
    description?: string | null; // String
    gender?: string | null; // String
    id: string; // String!
    microchipId?: string | null; // String
    name: string; // String!
    ownerId: string; // String!
    photoUrl?: string | null; // String
    type: string; // String!
  }
  PetOwner: { // root type
    email: string; // String!
    id: string; // String!
    name: string; // String!
  }
  PhotoMatch: { // root type
    foundPetId: string; // String!
    id: string; // String!
    lostReportId: string; // String!
    similarity: number; // Float!
  }
  PushSubscription: { // root type
    auth: string; // String!
    endpoint: string; // String!
    id: string; // String!
    p256dh: string; // String!
    userId: string; // String!
  }
  Query: {};
  ReportStatus: { // root type
    id: string; // String!
    note?: string | null; // String
    reportId: string; // String!
    reportType: string; // String!
    status: string; // String!
    updatedBy: string; // String!
  }
  User: { // root type
    address?: string | null; // String
    email: string; // String!
    id: string; // String!
    name: string; // String!
    phoneNumber?: string | null; // String
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars

export interface NexusGenFieldTypes {
  AuthResponse: { // field return type
    token: string; // String!
    userId: string; // String!
  }
  FoundPet: { // field return type
    description: string | null; // String
    finder: NexusGenRootTypes['User']; // User!
    finderId: string; // String!
    id: string; // String!
    location: NexusGenRootTypes['Location'] | null; // Location
    locationId: string | null; // String
    photoMatches: NexusGenRootTypes['PhotoMatch'][]; // [PhotoMatch!]!
    photoUrl: string | null; // String
    status: string; // String!
  }
  Location: { // field return type
    address: string | null; // String
    foundPet: NexusGenRootTypes['FoundPet'] | null; // FoundPet
    foundPetId: string | null; // String
    id: string; // String!
    latitude: number; // Float!
    longitude: number; // Float!
    lostReport: NexusGenRootTypes['LostPetReport'] | null; // LostPetReport
    lostReportId: string | null; // String
  }
  Logout: { // field return type
    logout: boolean; // Boolean!
  }
  LostPetReport: { // field return type
    description: string | null; // String
    id: string; // String!
    location: NexusGenRootTypes['Location'] | null; // Location
    locationId: string | null; // String
    pet: NexusGenRootTypes['Pet']; // Pet!
    petId: string; // String!
    photoMatches: NexusGenRootTypes['PhotoMatch'][]; // [PhotoMatch!]!
    reportedBy: string; // String!
    reporter: NexusGenRootTypes['User']; // User!
    status: string; // String!
    statuses: NexusGenRootTypes['ReportStatus'][]; // [ReportStatus!]!
  }
  Microchip: { // field return type
    chipNumber: string; // String!
    id: string; // String!
    pet: NexusGenRootTypes['Pet']; // Pet!
    petId: string; // String!
  }
  Mutation: { // field return type
    createLocation: NexusGenRootTypes['Location']; // Location!
    createLostPetReport: NexusGenRootTypes['LostPetReport']; // LostPetReport!
    createNotification: NexusGenRootTypes['Notification']; // Notification!
    createPet: NexusGenRootTypes['Pet'] | null; // Pet
    createUser: NexusGenRootTypes['User']; // User!
    login: NexusGenRootTypes['AuthResponse']; // AuthResponse!
    logout: NexusGenRootTypes['Logout']; // Logout!
    updateLostPetReport: NexusGenRootTypes['LostPetReport']; // LostPetReport!
  }
  Notification: { // field return type
    id: string; // String!
    message: string; // String!
    read: boolean; // Boolean!
    recipient: NexusGenRootTypes['User'] | null; // User
    sender: NexusGenRootTypes['User'] | null; // User
    senderId: string | null; // String
    userId: string; // String!
  }
  Pet: { // field return type
    age: number | null; // Int
    breed: string | null; // String
    description: string | null; // String
    gender: string | null; // String
    id: string; // String!
    lostReports: NexusGenRootTypes['LostPetReport'][]; // [LostPetReport!]!
    microchip: NexusGenRootTypes['Microchip'] | null; // Microchip
    microchipId: string | null; // String
    name: string; // String!
    owner: NexusGenRootTypes['PetOwner'] | null; // PetOwner
    ownerId: string; // String!
    photoUrl: string | null; // String
    type: string; // String!
  }
  PetOwner: { // field return type
    email: string; // String!
    id: string; // String!
    name: string; // String!
  }
  PhotoMatch: { // field return type
    foundPet: NexusGenRootTypes['FoundPet']; // FoundPet!
    foundPetId: string; // String!
    id: string; // String!
    lostReport: NexusGenRootTypes['LostPetReport']; // LostPetReport!
    lostReportId: string; // String!
    similarity: number; // Float!
  }
  PushSubscription: { // field return type
    auth: string; // String!
    endpoint: string; // String!
    id: string; // String!
    p256dh: string; // String!
    user: NexusGenRootTypes['User']; // User!
    userId: string; // String!
  }
  Query: { // field return type
    getAllLostPetReports: NexusGenRootTypes['LostPetReport'][]; // [LostPetReport!]!
    getAllLostPets: NexusGenRootTypes['LostPetReport'][]; // [LostPetReport!]!
    getAllUsers: NexusGenRootTypes['User'][]; // [User!]!
    getFilteredPets: Array<NexusGenRootTypes['LostPetReport'] | null>; // [LostPetReport]!
    getLostPetReport: NexusGenRootTypes['LostPetReport']; // LostPetReport!
    getPet: NexusGenRootTypes['Pet']; // Pet!
    getPets: Array<NexusGenRootTypes['Pet'] | null>; // [Pet]!
    getUser: NexusGenRootTypes['User']; // User!
    getUserPets: NexusGenRootTypes['Pet'][]; // [Pet!]!
    notifications: NexusGenRootTypes['Notification'][]; // [Notification!]!
  }
  ReportStatus: { // field return type
    id: string; // String!
    lostPetReport: NexusGenRootTypes['LostPetReport'] | null; // LostPetReport
    note: string | null; // String
    reportId: string; // String!
    reportType: string; // String!
    status: string; // String!
    updatedBy: string; // String!
    updater: NexusGenRootTypes['User']; // User!
  }
  User: { // field return type
    address: string | null; // String
    email: string; // String!
    foundPets: NexusGenRootTypes['FoundPet'][]; // [FoundPet!]!
    id: string; // String!
    name: string; // String!
    notifications: NexusGenRootTypes['Notification'][]; // [Notification!]!
    pets: NexusGenRootTypes['Pet'][]; // [Pet!]!
    phoneNumber: string | null; // String
    reports: NexusGenRootTypes['LostPetReport'][]; // [LostPetReport!]!
    statusUpdates: NexusGenRootTypes['ReportStatus'][]; // [ReportStatus!]!
  }
}

export interface NexusGenFieldTypeNames {
  AuthResponse: { // field return type name
    token: 'String'
    userId: 'String'
  }
  FoundPet: { // field return type name
    description: 'String'
    finder: 'User'
    finderId: 'String'
    id: 'String'
    location: 'Location'
    locationId: 'String'
    photoMatches: 'PhotoMatch'
    photoUrl: 'String'
    status: 'String'
  }
  Location: { // field return type name
    address: 'String'
    foundPet: 'FoundPet'
    foundPetId: 'String'
    id: 'String'
    latitude: 'Float'
    longitude: 'Float'
    lostReport: 'LostPetReport'
    lostReportId: 'String'
  }
  Logout: { // field return type name
    logout: 'Boolean'
  }
  LostPetReport: { // field return type name
    description: 'String'
    id: 'String'
    location: 'Location'
    locationId: 'String'
    pet: 'Pet'
    petId: 'String'
    photoMatches: 'PhotoMatch'
    reportedBy: 'String'
    reporter: 'User'
    status: 'String'
    statuses: 'ReportStatus'
  }
  Microchip: { // field return type name
    chipNumber: 'String'
    id: 'String'
    pet: 'Pet'
    petId: 'String'
  }
  Mutation: { // field return type name
    createLocation: 'Location'
    createLostPetReport: 'LostPetReport'
    createNotification: 'Notification'
    createPet: 'Pet'
    createUser: 'User'
    login: 'AuthResponse'
    logout: 'Logout'
    updateLostPetReport: 'LostPetReport'
  }
  Notification: { // field return type name
    id: 'String'
    message: 'String'
    read: 'Boolean'
    recipient: 'User'
    sender: 'User'
    senderId: 'String'
    userId: 'String'
  }
  Pet: { // field return type name
    age: 'Int'
    breed: 'String'
    description: 'String'
    gender: 'String'
    id: 'String'
    lostReports: 'LostPetReport'
    microchip: 'Microchip'
    microchipId: 'String'
    name: 'String'
    owner: 'PetOwner'
    ownerId: 'String'
    photoUrl: 'String'
    type: 'String'
  }
  PetOwner: { // field return type name
    email: 'String'
    id: 'String'
    name: 'String'
  }
  PhotoMatch: { // field return type name
    foundPet: 'FoundPet'
    foundPetId: 'String'
    id: 'String'
    lostReport: 'LostPetReport'
    lostReportId: 'String'
    similarity: 'Float'
  }
  PushSubscription: { // field return type name
    auth: 'String'
    endpoint: 'String'
    id: 'String'
    p256dh: 'String'
    user: 'User'
    userId: 'String'
  }
  Query: { // field return type name
    getAllLostPetReports: 'LostPetReport'
    getAllLostPets: 'LostPetReport'
    getAllUsers: 'User'
    getFilteredPets: 'LostPetReport'
    getLostPetReport: 'LostPetReport'
    getPet: 'Pet'
    getPets: 'Pet'
    getUser: 'User'
    getUserPets: 'Pet'
    notifications: 'Notification'
  }
  ReportStatus: { // field return type name
    id: 'String'
    lostPetReport: 'LostPetReport'
    note: 'String'
    reportId: 'String'
    reportType: 'String'
    status: 'String'
    updatedBy: 'String'
    updater: 'User'
  }
  User: { // field return type name
    address: 'String'
    email: 'String'
    foundPets: 'FoundPet'
    id: 'String'
    name: 'String'
    notifications: 'Notification'
    pets: 'Pet'
    phoneNumber: 'String'
    reports: 'LostPetReport'
    statusUpdates: 'ReportStatus'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    createLocation: { // args
      address?: string | null; // String
      foundPetId?: string | null; // String
      latitude: number; // Float!
      longitude: number; // Float!
      lostReportId?: string | null; // String
    }
    createLostPetReport: { // args
      description?: string | null; // String
      locationId?: string | null; // String
      petId: string; // String!
      reportedBy: string; // String!
      status?: string | null; // String
    }
    createNotification: { // args
      email: string; // String!
      message: string; // String!
      name: string; // String!
      phone: string; // String!
      userId: string; // String!
    }
    createPet: { // args
      age?: number | null; // Int
      breed?: string | null; // String
      description?: string | null; // String
      gender?: string | null; // String
      microchipId?: string | null; // String
      name: string; // String!
      ownerId: string; // String!
      photoUrl?: string | null; // String
      type: string; // String!
    }
    createUser: { // args
      email: string; // String!
      name?: string | null; // String
    }
    login: { // args
      email: string; // String!
      password: string; // String!
    }
    updateLostPetReport: { // args
      description?: string | null; // String
      id: string; // String!
      locationId?: string | null; // String
      status?: string | null; // String
    }
  }
  Query: {
    getFilteredPets: { // args
      searchTerm?: string | null; // String
    }
    getLostPetReport: { // args
      id: string; // String!
    }
    getPet: { // args
      id: string; // String!
    }
    getUser: { // args
      id: string; // String!
    }
    getUserPets: { // args
      userId: string; // String!
    }
    notifications: { // args
      userId: string; // String!
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = never;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}